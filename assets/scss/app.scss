@import "variables/index";
@import "reboot-custom";
@import "molle";
@import "font-icon";
@import "grid";
@import "form";
@import "animation";
@import "font-style";

.isPc {
  @include mediaquery-sm {
    display: none !important;
  }
}

.isSp {
  @include mediaquery-not-sm {
    display: none !important;
  }
}

.container {
  margin-left: auto;
  margin-right: auto;
  @include mediaquery-not-sm {
    padding-left: $gutter + 0px;
    padding-right: $gutter + 0px;
    max-width: $size-container;
  }
  @include mediaquery-sm {
    padding-left: $gutter + 0px;
    padding-right: $gutter + 0px;
  }
}

.container-thin {
  margin-left: auto;
  margin-right: auto;
  @include mediaquery-not-sm {
    max-width: map-get($size-col, 10);
  }
  @include mediaquery-sm {
  }
}

// ページ
.l-body {
  $pcH: 4.5rem;
  $spH: 4rem;
  @include mediaquery-not-sm {
    padding-top: $pcH;
  }
  @include mediaquery-sm {
    padding-top: $spH;
  }
}

// ページのメインコンテンツエリア
.l-content {
  &::before,
  &::after {
    content: "";
    display: block;
  }
  @include mediaquery-not-sm {
    &::before {
      margin-bottom: 3rem;
    }
    &::after {
      margin-top: 7rem;
    }
  }
  @include mediaquery-sm {
    &::before {
      margin-bottom: 3rem;
    }
    &::after {
      margin-top: 5rem;
    }
  }
}

.to-top {
  position: fixed;
  width: 50px;
  height: 50px;
  border-radius: 50%;
  z-index: 1;
  @include mediaquery-not-sm {
    right: 44px;
    bottom: 52px;
  }
  @include mediaquery-sm {
    right: 0.5rem;
    bottom: 2rem;
  }

  &::after {
    @include icon-arrow-up-circle();
    color: $color-gray-500;
    opacity: 0.9;
    font-size: 53px;
    position: absolute;
  }
}

.breadcrumbs {
  display: flex;
  margin-top: 2rem;
  margin-bottom: 2rem;

  a {
    text-decoration: none;
    color: $color-gray-700;
  }

  &__top {
    &::after {
      @include icon-arrow-right();
      color: $color-gray-700;
      padding-left: 1rem;
      padding-right: 1rem;
    }
  }
}

//data-isview
[data-isview] {
  transition-property: opacity, transform;
  transition-duration: $tick * 2, $tick * 2;
  transition-delay: $tick * 1, $tick * 1;
  transition-timing-function: $easeOutSine;
}

[data-isview*="outview"] {
  opacity: 0;
  @include mediaquery-not-sm {
    transform: translate3d(0, 100px, 0);
  }
  @include mediaquery-sm {
    transform: translate3d(0, 150px, 0);
  }
}

[data-isview*="inview"] {
  opacity: 1;
  transform: translate3d(0, 0, 0);
}
